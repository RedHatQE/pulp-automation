---
- name: Checkout and setup automation for single node
  hosts:
    - "tag_Name_{{automation_name}}_automation_runner"
  tasks:
    - name: remove previous automation
      file: path={{automation_dir}}-single-node state=absent
    - name: checkout automation repositories
      git: "repo=https://github.com/RedHatQE/pulp-automation dest={{automation_dir}}-single-node force=yes"
    - name: make sure file is executable
      file: "path={{automation_dir}}-single-node/setup.py mode=744"
      #TODO: ugly! copy remote-remote
    - name: fetch pubkey for copying to other hosts
      fetch: src=/root/.ssh/test_rsa.pub dest=./ flat=yes
    - name: get public dns name os node
      set_fact:
        sg_node_dns: "{{hostvars[groups['tag_Name_'+automation_name+'_single_node'][0]]['ec2_public_dns_name']}}"
    - name: copy inventory file for yaml
      command: "cp {{automation_dir}}-single-node/tests/inventory.yml {{automation_dir}}-single-node/"
    - name: configure inventory file
      replace:
        dest="{{automation_dir}}-single-node/inventory.yml"
        regexp='pulp\.example\.com'
        replace='{{sg_node_dns}}'
    - name: set consumer in file
      replace:
        dest="{{automation_dir}}-single-node/inventory.yml"
        regexp='consumer\.example\.com'
        replace='{{sg_node_dns}}'
    - name: set path to certificate
      replace:
        dest="{{automation_dir}}-single-node/inventory.yml"
        regexp='False/Ca-path'
        replace='/etc/pki/tls/certs/myca.crt'
    - name: disable verify 
      replace:
        dest="{{automation_dir}}-single-node/inventory.yml"
        regexp='True/False or can be left empty'
        replace=''
    - name: set path to key
      replace:
        dest="{{automation_dir}}-single-node/inventory.yml"
        regexp='ssh_key:.*'
        replace='ssh_key{{':'}} /root/.ssh/test_rsa'
    - name: run setup
      shell: "python setup.py install chdir={{automation_dir}}-single-node"
    
- name: Configure single node 
  hosts:
    - "tag_Name_{{automation_name}}_single_node"
  tasks:
    - name: ensure automation_runner is between authorized hosts
      authorized_key: user=root key="{{ lookup('file', 'test_rsa.pub') }}"
    - name: stop all pulp related services
      service: state=stopped name={{item}}
      with_items:
        - httpd
        - pulp_workers
        - pulp_worker-0
        - pulp_celerybeat
        - pulp_resource_manager
        - qpidd
    - name: drop old pulp db
      command: mongo pulp_database --eval "db.dropDatabase()"
    - name: start qpid
      service: name=qpidd state=started
    - name: manage mongodb
      become: yes
      become_user: apache
      command: pulp-manage-db
    - name: start again all pulp related services
      service: state=started name={{item}}
      with_items:
        - httpd
        - pulp_workers
        - pulp_worker-0
        - pulp_celerybeat
        - pulp_resource_manager


- name: Run automation from automation runner
  hosts:
    - "tag_Name_{{automation_name}}_automation_runner"
  tasks:
    - name: remove public key from local dir 
      local_action: file path=./test_rsa.pub state=absent
    - name: copy certificate file to automation runner
      command: "scp -o StrictHostKeyChecking=no -i /root/.ssh/test_rsa root@{{hostvars[groups['tag_Name_'+automation_name+'_single_node'][0]]['ec2_public_dns_name']}}{{':'}}/etc/pki/tls/certs/myca.crt /etc/pki/tls/certs/"
    - name: run all tests on single node
      command: "chdir={{automation_dir}}-single-node nosetests -vs --with-xunit"
