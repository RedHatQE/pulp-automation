---
# vim:ft=ansible:
- name: set ami and user
  hosts: localhost
  roles:
    - ami-user-set

- name: Deploy a machine for single node stable-to-latest testing
  hosts: localhost
  tasks:
    - name: Terminate instance first for clean pulp installation
      ec2:
        region: "{{ region }}"
        image: "{{ ami_single_stable_to_latest }}"
        exact_count: 0
        count_tag:
          Name: "{{automation_name}}_single_stable_to_latest" 
    - name: Launch new ec2 single node stable-to-latest testing instance
      ec2:
        key_name: "{{ key_name }}"
        group: "{{ pulp_sg }}"
        instance_type: "{{ instance_type }}"
        image: "{{ ami_single_stable_to_latest }}"
        wait: true
        region: "{{ region }}"
        monitoring: no
        assign_public_ip: no
        instance_tags:
          Name: "{{automation_name}}_single_stable_to_latest" 
        count_tag:
          Name: "{{automation_name}}_single_stable_to_latest" 
        exact_count: 1
      register: ec2
    - name: Add new instance to host group
      add_host: hostname={{ item.public_ip }} groupname=launched
      with_items: ec2.instances
    - name: Wait for SSH to come up
      wait_for: host={{ item.public_dns_name }} port=22 delay=60 timeout=320 state=started
      with_items: ec2.instances

- name: Enable root access
  remote_user: "{{ hostvars['localhost']['rem_user_single_stable_to_latest'] }}"
  hosts: launched
  tasks:
    - name: Enable root access
      become: yes
      become_method: sudo
      shell: "{{item}}"
      with_items:
        - "sed -i s,disable_root:.*,disable_root:0, /etc/cloud/cloud.cfg"
        - "cat ~{{ hostvars['localhost']['rem_user_single_stable_to_latest'] }}/.ssh/authorized_keys > /root/.ssh/authorized_keys"

- name: Update packages
  hosts: launched
  roles:
    - set-package-manager
  tasks:
    - name: update all packages
      action: "{{package_manager}} state=latest name=*"
